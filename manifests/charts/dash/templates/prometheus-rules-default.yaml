{{/* https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack */}}
{{- if and .Values.prometheusOperator.enabled .Values.prometheusOperator.defaultRules.enabled }}
{{- if or .Values.prometheusOperator.defaultRules.numNewCVEs.enabled .Values.prometheusOperator.defaultRules.percentNoncompliance.enabled }}
{{- $prometheusAppName := include "dash.prom-name" . }}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  {{- $lenRuleOne := len "m9s-alerts" }}
  name: {{ printf "%s-m9s-alerts" ($prometheusAppName | trunc $lenRuleOne | trimSuffix "-") }}
  namespace: {{ $.Release.Namespace }}
spec:
  groups:
    {{- with .Values.prometheusOperator.defaultRules.numNewCVEs }}
    {{- if .enabled }}
    - name: NewCVEs
      rules:
      - alert: ManyNewCVEs
        annotations:
          description: Fires when the number of new major + critical CVEs in the last {{ .duration }} exceeds {{ .threshold }}
          summary: The number of new CVEs breached {{ .threshold }}
        expr: (delta(num_critical_cves[{{ .duration }}])+delta(num_major_cves[{{ .duration }}])) > {{ .threshold }}
        labels:
          severity: warning
    {{- end }}{{/* closes if .Values.prometheusOperator.defaultRules.numNewCVEs.enabled */}}
    {{- end }}{{/* closes with .Values.prometheusOperator.defaultRules.numNewCVEs */}}

    {{- with .Values.prometheusOperator.defaultRules.percentNoncompliance }}
    {{- if .enabled }}
    - name: PercentNoncompliance
      rules:
      - alert: PodComplianceDecreased
        annotations:
          description: Fires when pod compliance falls below {{ .threshold }}%
          summary: Pod compliance decreased
        expr: (((sum by (cluster) (num_pods_compliant))/((sum by (cluster) (num_pods_compliant))+(sum by (cluster) (num_pods_noncompliant))))*100) < {{ .threshold }}
        labels:
          severity: warning
      {{- end }}{{/*  closes if .Values.prometheusOperator.defaultRules.percentNoncompliance.enabled */}}
      {{- end }}{{/*  closes with .Values.prometheusOperator.defaultRules.percentNoncompliance */}}

      {{- with .Values.prometheusOperator.defaultRules.numNewTestFailures }}
      {{- if .enabled }}
      - name: NewTestFailures
        rules:
          - alert: ManyNewTestFailures
            annotations:
              description: Fires when the number of new failed + warning tests in the last {{ .duration }} exceeds {{ .threshold }}
              summary: The number of new kube-bench test failures exceeded {{ .threshold }}
            expr: (delta(kube_bench_failed_tests[{{ .duration }}])+delta(kube_bench_tests_with_warnings[{{ .duration }}])) > {{ .threshold }}
            labels:
              severity: warning
      {{- end }}{{/*  closes if .Values.prometheusOperator.defaultRules.numNewTestFailures.enabled */}}
      {{- end }}{{/*  closes with .Values.prometheusOperator.defaultRules.numNewTestFailures */}}

      {{- with .Values.prometheusOperator.defaultRules.numNewVulnerabilitiesDetected }}
      {{- if .enabled }}
      - name: NewTestFailures
        rules:
          - alert: ManyNewTestFailures
            annotations:
              description: Fires when the number of new high-severity vulnerabilities in the last {{ .duration }} exceeds {{ .threshold }}
              summary: The number of vulnerabilities from kube-hunter exceeded {{ .threshold }}
            expr: delta(kube_hunter_num_high_vulnerabilities[{{ .duration }}]) > {{ .threshold }}
            labels:
              severity: warning
      {{- end }}{{/*  closes if .Values.prometheusOperator.defaultRules.numNewVulnerabilitiesDetected.enabled */}}
      {{- end }}{{/*  closes with .Values.prometheusOperator.defaultRules.numNewVulnerabilitiesDetected */}}

{{- end }}{{/*  closes if or .Values.prometheusOperator.defaultRules.numNewCVEs.enabled .Values.prometheusOperator.defaultRules.percentNoncompliance.enabled */}}
{{- end }}{{/*  closes if and .Values.prometheusOperator.enabled .Values.prometheusOperator.defaultRules.enabled */}}
